package com.inetum.appliSpring;

import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import com.inetum.appliSpring.tp.Encadreur;
import com.inetum.appliSpring.tp.Prefixeur;
import com.inetum.appliSpring.tp1.GenerateurBlague;
import com.inetum.appliSpring.tp1.PresentateurBlague;

public class AppliSpringApplication {	

		public static void main(String[] args) {
			//testEncadreur();
			testBlagues();
		}
			
		
		public static void testBlagues() {	
			System.setProperty("spring.profiles.active","V1,eventuelProfilComplementaire");
			//System.setProperty("spring.profiles.active","V2,eventuelProfilComplementaire");
			
			AnnotationConfigApplicationContext springContext = new
					AnnotationConfigApplicationContext(MySpringConfig.class);
			PresentateurBlague  presentateurBlague= springContext.getBean(PresentateurBlague.class);
			//GenerateurBlague generateurBlague = springContext.getBean(GenerateurBlague.class);
			System.err.println("appliSpring démarrée");
			presentateurBlague.presenterBlague();
			springContext.close();
		}
		
		
		
		public static void testEncadreur() {	
			
			//System.setProperty("spring.profiles.active","V1,eventuelProfilComplementaire");
			System.setProperty("spring.profiles.active","V2,eventuelProfilComplementaire");
			AnnotationConfigApplicationContext springContext = new
					AnnotationConfigApplicationContext(MySpringConfig.class);
			
			Prefixeur prefixeur = springContext.getBean(Prefixeur.class);
			
			System.err.println("appliSpring démarrée");
			System.err.println("chaine prefixee  ="+ prefixeur.prefixer("lundi"));
			
			Encadreur encadreur = springContext.getBean(Encadreur.class);
			System.err.println("chaine encadrée  ="+ encadreur.encadrer("bob"));
			
			springContext.close();
		}
	
	}

